{
    "swagger": "2.0",
    "info": {
        "description": "Multi-Tenant Messaging system with RabbitMQ and Postgres",
        "title": "Multi-Tenant Messaging API",
        "contact": {
            "name": "Developer",
            "email": "you@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/messages": {
            "get": {
                "description": "Retrieves messages using cursor-based pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get messages with cursor pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tenants": {
            "post": {
                "description": "Creates a new tenant queue and consumer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tenants"
                ],
                "summary": "Create new tenant",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tenants/{id}": {
            "delete": {
                "description": "Stops consumer, deletes queue",
                "tags": [
                    "tenants"
                ],
                "summary": "Delete tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tenants/{id}/config/concurrency": {
            "put": {
                "description": "Updates worker pool size for tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenants"
                ],
                "summary": "Update concurrency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Concurrency config",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    }
}